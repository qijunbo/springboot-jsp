import java.text.SimpleDateFormat;
import java.util.Date;

def getDateTime() {
		SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd-HHmm");
		return format.format(new Date());
}

ext {
	currentTime = getDateTime()
}

buildscript {
    repositories {
		maven{ url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
        mavenCentral()
    }
    dependencies {
	
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
    }
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'


war {
    baseName = 'springboot_jsp'
    // version =  '1.0.0-' + currentTime
  
}
 
repositories {
	maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
	maven { url 'http://repo.spring.io/libs-snapshot'}
	maven { url 'http://maven.springframework.org/release' }
	maven { url 'http://maven.springframework.org/milestone' }
	maven { url 'http://maven.springframework.org/snapshot' }
	maven { url 'http://download.java.net/maven/2' }
	maven { url 'http://maven.oschina.net/content/groups/public/' }
	maven { url 'https://repository.jboss.org/nexus/content/groups/public-jboss/' }
    mavenCentral()
}

//bootRepackage {
//    executable = true
//}

configurations {
	 providedRuntime
}
	
sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
	 
    compile("org.springframework.boot:spring-boot-starter-web")
	providedRuntime ("org.springframework.boot:spring-boot-starter-tomcat")
	providedRuntime ("org.apache.tomcat.embed:tomcat-embed-jasper")
 
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
